import { GEM_WALLET } from '../global/global.constant';
import { AcceptNFTOfferResponse, AcceptNFTOfferRequest, BurnNFTRequest, BurnNFTResponse, CancelNFTOfferRequest, CancelNFTOfferResponse, CancelOfferRequest, CancelOfferResponse, CreateNFTOfferRequest, CreateNFTOfferResponse, CreateOfferRequest, CreateOfferResponse, EventLoginResponse, EventLogoutResponse, EventNetworkChangedResponse, EventWalletChangedResponse, GetAddressResponse, GetAddressResponseDeprecated, GetNFTResponse, GetNFTResponseDeprecated, GetNetworkResponse, GetNetworkResponseDeprecated, GetNFTRequest, GetPublicKeyResponse, GetPublicKeyResponseDeprecated, IsInstalledResponse, MintNFTRequest, MintNFTResponse, PasswordInternalResponse, SendPaymentRequest, SendPaymentRequestDeprecated, SendPaymentResponse, SendPaymentResponseDeprecated, SetAccountResponse, SetAccountRequest, SetTrustlineResponse, SetTrustlineResponseDeprecated, SetTrustlineRequest, SetTrustlineRequestDeprecated, SignMessageResponse, SignMessageResponseDeprecated, SignMessageRequest, SubmitTransactionResponse, SubmitTransactionRequest, WebsiteRequest } from '../payload/payload.types';
import { MSG_INTERNAL_RECEIVE_PASSWORD, MSG_INTERNAL_RECEIVE_SIGN_OUT, MSG_INTERNAL_REQUEST_PASSWORD } from './message.constant';
export declare type RequestMessage = 'REQUEST_ACCEPT_NFT_OFFER/V3' | 'REQUEST_ADDRESS' | 'REQUEST_ADD_TRUSTLINE' | 'REQUEST_BURN_NFT/V3' | 'REQUEST_CONNECTION' | 'REQUEST_CANCEL_NFT_OFFER/V3' | 'REQUEST_CANCEL_OFFER/V3' | 'REQUEST_CREATE_NFT_OFFER/V3' | 'REQUEST_CREATE_OFFER/V3' | 'REQUEST_GET_ADDRESS/V3' | 'REQUEST_GET_NETWORK/V3' | 'REQUEST_GET_NFT/V3' | 'REQUEST_GET_PUBLIC_KEY/V3' | 'REQUEST_MINT_NFT/V3' | 'REQUEST_NETWORK' | 'REQUEST_NFT' | 'REQUEST_PUBLIC_KEY' | 'REQUEST_SEND_PAYMENT/V3' | 'REQUEST_SET_ACCOUNT/V3' | 'REQUEST_SET_TRUSTLINE/V3' | 'REQUEST_SIGN_MESSAGE' | 'REQUEST_SIGN_MESSAGE/V3' | 'REQUEST_SUBMIT_TRANSACTION/V3' | 'SEND_PAYMENT';
export declare type ReceiveMessage = 'RECEIVE_ACCEPT_NFT_OFFER/V3' | 'RECEIVE_ADDRESS' | 'RECEIVE_BURN_NFT/V3' | 'RECEIVE_CANCEL_NFT_OFFER/V3' | 'RECEIVE_CANCEL_OFFER/V3' | 'RECEIVE_CREATE_NFT_OFFER/V3' | 'RECEIVE_CREATE_OFFER/V3' | 'RECEIVE_GET_ADDRESS/V3' | 'RECEIVE_GET_NFT/V3' | 'RECEIVE_GET_PUBLIC_KEY/V3' | 'RECEIVE_GET_NETWORK/V3' | 'RECEIVE_MINT_NFT/V3' | 'RECEIVE_NETWORK' | 'RECEIVE_NFT' | 'RECEIVE_PAYMENT_HASH' | 'RECEIVE_TRUSTLINE_HASH' | 'RECEIVE_PUBLIC_KEY' | 'RECEIVE_SEND_PAYMENT/V3' | 'RECEIVE_SET_ACCOUNT/V3' | 'RECEIVE_SET_TRUSTLINE/V3' | 'RECEIVE_SIGN_MESSAGE' | 'RECEIVE_SIGN_MESSAGE/V3' | 'RECEIVE_SUBMIT_TRANSACTION/V3';
export declare type EventMessage = 'EVENT_NETWORK_CHANGED' | 'EVENT_WALLET_CHANGED' | 'EVENT_LOGIN' | 'EVENT_LOGOUT';
export declare type SourceMessage = 'GEM_WALLET_MSG_REQUEST' | 'GEM_WALLET_MSG_RESPONSE';
export interface RequestGetNetworkMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_GET_NETWORK/V3';
}
export interface RequestGetNetworkMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_NETWORK';
}
export interface RequestGetAddressMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_GET_ADDRESS/V3';
    payload: WebsiteRequest;
}
export interface RequestGetAddressMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_ADDRESS';
    payload: WebsiteRequest;
}
export interface RequestGetPublicKeyMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_GET_PUBLIC_KEY/V3';
    payload: WebsiteRequest;
}
export interface RequestGetPublicKeyMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_PUBLIC_KEY';
    payload: WebsiteRequest;
}
export interface RequestSendPaymentMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SEND_PAYMENT/V3';
    payload: SendPaymentRequest;
}
export interface RequestSendPaymentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'SEND_PAYMENT';
    payload: SendPaymentRequestDeprecated;
}
export interface RequestSetTrustlineMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SET_TRUSTLINE/V3';
    payload: SetTrustlineRequest;
}
export interface RequestSetTrustlineMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_ADD_TRUSTLINE';
    payload: SetTrustlineRequestDeprecated;
}
export interface RequestMintNFTMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_MINT_NFT/V3';
    payload: MintNFTRequest;
}
export interface RequestCreateNFTOfferMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_CREATE_NFT_OFFER/V3';
    payload: CreateNFTOfferRequest;
}
export interface RequestCancelNFTOfferMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_CANCEL_NFT_OFFER/V3';
    payload: CancelNFTOfferRequest;
}
export interface RequestAcceptNFTOfferMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_ACCEPT_NFT_OFFER/V3';
    payload: AcceptNFTOfferRequest;
}
export interface RequestBurnNFTMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_BURN_NFT/V3';
    payload: BurnNFTRequest;
}
export interface RequestGetNFTMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_GET_NFT/V3';
    payload: GetNFTRequest & WebsiteRequest;
}
export interface RequestGetNFTMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_NFT';
    payload: GetNFTRequest & WebsiteRequest;
}
export interface RequestSignMessageMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SIGN_MESSAGE/V3';
    payload: SignMessageRequest;
}
export interface RequestSignMessageMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SIGN_MESSAGE';
    payload: SignMessageRequest;
}
export interface RequestSetAccountMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SET_ACCOUNT/V3';
    payload: SetAccountRequest;
}
export interface RequestCreateOfferMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_CREATE_OFFER/V3';
    payload: CreateOfferRequest;
}
export interface RequestCancelOfferMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_CANCEL_OFFER/V3';
    payload: CancelOfferRequest;
}
export interface RequestSubmitTransactionMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_SUBMIT_TRANSACTION/V3';
    payload: SubmitTransactionRequest;
}
export interface InternalRequestPasswordMessage {
    app: typeof GEM_WALLET;
    type: typeof MSG_INTERNAL_REQUEST_PASSWORD;
}
export declare type MessagingResponse = {
    source?: 'GEM_WALLET_MSG_RESPONSE';
    messagedId?: number;
    error?: MessagingError;
};
export declare type InternalMessagingResponse = {
    source?: 'INTERNAL_RESPONSE';
    messagedId?: number;
    error?: MessagingError;
};
export interface MessagingError {
    name: string;
    message: string;
    stack?: string;
}
export declare type AcceptNFTOfferMessagingResponse = MessagingResponse & AcceptNFTOfferResponse;
export declare type BurnNFTMessagingResponse = MessagingResponse & BurnNFTResponse;
export declare type CancelNFTOfferMessagingResponse = MessagingResponse & CancelNFTOfferResponse;
export declare type CancelOfferMessagingResponse = MessagingResponse & CancelOfferResponse;
export declare type CreateNFTOfferMessagingResponse = MessagingResponse & CreateNFTOfferResponse;
export declare type CreateOfferMessagingResponse = MessagingResponse & CreateOfferResponse;
export declare type GetNetworkMessagingResponse = MessagingResponse & GetNetworkResponse;
export declare type GetNetworkMessagingResponseDeprecated = MessagingResponse & GetNetworkResponseDeprecated;
export declare type GetNFTMessagingResponse = MessagingResponse & GetNFTResponse;
export declare type GetNFTMessagingResponseDeprecated = MessagingResponse & GetNFTResponseDeprecated;
export declare type GetAddressMessagingResponse = MessagingResponse & GetAddressResponse;
export declare type GetAddressMessagingResponseDeprecated = MessagingResponse & GetAddressResponseDeprecated;
export declare type GetPublicKeyMessagingResponse = MessagingResponse & GetPublicKeyResponse;
export declare type GetPublicKeyMessagingResponseDeprecated = MessagingResponse & GetPublicKeyResponseDeprecated;
export declare type MintNFTMessagingResponse = MessagingResponse & MintNFTResponse;
export declare type SignMessageMessagingResponse = MessagingResponse & SignMessageResponse;
export declare type SignMessageMessagingResponseDeprecated = MessagingResponse & SignMessageResponseDeprecated;
export declare type SubmitTransactionMessagingResponse = MessagingResponse & SubmitTransactionResponse;
export declare type IsInstalledMessagingResponse = MessagingResponse & IsInstalledResponse;
export declare type SendPaymentMessagingResponse = MessagingResponse & SendPaymentResponse;
export declare type SendPaymentMessagingResponseDeprecated = MessagingResponse & SendPaymentResponseDeprecated;
export declare type SetAccountMessagingResponse = MessagingResponse & SetAccountResponse;
export declare type SetTrustlineMessagingResponse = MessagingResponse & SetTrustlineResponse;
export declare type SetTrustlineMessagingResponseDeprecated = MessagingResponse & SetTrustlineResponseDeprecated;
export declare type PasswordInternalMessagingResponse = InternalMessagingResponse & PasswordInternalResponse;
export declare type EventNetworkChangedMessagingResponse = MessagingResponse & EventNetworkChangedResponse;
export declare type EventWalletChangedMessagingResponse = MessagingResponse & EventWalletChangedResponse;
export declare type EventLoginMessagingResponse = MessagingResponse & EventLoginResponse;
export declare type EventLogoutMessagingResponse = MessagingResponse & EventLogoutResponse;
export interface ReceiveSendPaymentContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SEND_PAYMENT/V3';
    payload: SendPaymentMessagingResponse;
}
export interface ReceiveSendPaymentContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_PAYMENT_HASH';
    payload: SendPaymentResponseDeprecated;
}
export interface ReceiveSetTrustlineContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SET_TRUSTLINE/V3';
    payload: SetTrustlineMessagingResponse;
}
export interface ReceiveSetTrustlineContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_TRUSTLINE_HASH';
    payload: SetTrustlineResponseDeprecated;
}
export interface ReceiveGetAddressContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_GET_ADDRESS/V3';
    payload: GetAddressMessagingResponse;
}
export interface ReceiveGetAddressContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_ADDRESS';
    payload: GetAddressResponseDeprecated;
}
export interface ReceiveGetNetworkContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_GET_NETWORK/V3';
    payload: GetNetworkMessagingResponse;
}
export interface ReceiveGetNetworkContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_NETWORK';
    payload: GetNetworkResponseDeprecated;
}
export interface ReceiveGetNFTContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_GET_NFT/V3';
    payload: GetNFTMessagingResponse;
}
export interface ReceiveGetNFTContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_NFT';
    payload: GetNFTResponseDeprecated;
}
export interface ReceiveGetPublicKeyContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_GET_PUBLIC_KEY/V3';
    payload: GetPublicKeyMessagingResponse;
}
export interface ReceiveGetPublicKeyContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_PUBLIC_KEY';
    payload: GetPublicKeyResponseDeprecated;
}
export interface ReceiveSignMessageContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SIGN_MESSAGE/V3';
    payload: SignMessageMessagingResponse;
}
export interface ReceiveSignMessageContentMessageDeprecated {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SIGN_MESSAGE';
    payload: SignMessageResponseDeprecated;
}
export interface ReceiveMintNFTContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_MINT_NFT/V3';
    payload: MintNFTMessagingResponse;
}
export interface ReceiveCreateNFTOfferContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_CREATE_NFT_OFFER/V3';
    payload: CreateNFTOfferMessagingResponse;
}
export interface ReceiveCancelNFTOfferContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_CANCEL_NFT_OFFER/V3';
    payload: CancelNFTOfferMessagingResponse;
}
export interface ReceiveAcceptNFTOfferContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_ACCEPT_NFT_OFFER/V3';
    payload: AcceptNFTOfferMessagingResponse;
}
export interface ReceiveBurnNFTContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_BURN_NFT/V3';
    payload: BurnNFTMessagingResponse;
}
export interface ReceiveSetAccountContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SET_ACCOUNT/V3';
    payload: SetAccountMessagingResponse;
}
export interface ReceiveCreateOfferContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_CREATE_OFFER/V3';
    payload: CreateOfferMessagingResponse;
}
export interface ReceiveCancelOfferContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_CANCEL_OFFER/V3';
    payload: CancelOfferMessagingResponse;
}
export interface ReceiveSubmitTransactionContentMessage {
    app: typeof GEM_WALLET;
    type: 'RECEIVE_SUBMIT_TRANSACTION/V3';
    payload: SubmitTransactionMessagingResponse;
}
export interface InternalReceivePasswordContentMessage {
    app: typeof GEM_WALLET;
    type: typeof MSG_INTERNAL_RECEIVE_PASSWORD;
    payload: PasswordInternalMessagingResponse;
}
export interface InternalReceiveSignOutContentMessage {
    app: typeof GEM_WALLET;
    type: typeof MSG_INTERNAL_RECEIVE_SIGN_OUT;
}
export interface EventNetworkChangedContentMessage {
    app: typeof GEM_WALLET;
    type: 'EVENT_NETWORK_CHANGED';
    source: 'GEM_WALLET_MSG_REQUEST';
    payload: EventNetworkChangedMessagingResponse;
}
export interface EventWalletChangedContentMessage {
    app: typeof GEM_WALLET;
    type: 'EVENT_WALLET_CHANGED';
    source: 'GEM_WALLET_MSG_REQUEST';
    payload: EventWalletChangedMessagingResponse;
}
export interface EventLoginContentMessage {
    app: typeof GEM_WALLET;
    type: 'EVENT_LOGIN';
    source: 'GEM_WALLET_MSG_REQUEST';
    payload: EventLoginMessagingResponse;
}
export interface EventLogoutContentMessage {
    app: typeof GEM_WALLET;
    type: 'EVENT_LOGOUT';
    source: 'GEM_WALLET_MSG_REQUEST';
    payload: EventLogoutMessagingResponse;
}
export declare type EventContentMessage = EventNetworkChangedContentMessage | EventWalletChangedContentMessage | EventLoginContentMessage | EventLogoutContentMessage;
declare type BackgroundMessagePayload = {
    payload: {
        id: number;
    };
};
export declare type ReceiveSendPaymentBackgroundMessage = ReceiveSendPaymentContentMessage & BackgroundMessagePayload;
export declare type ReceiveSendPaymentBackgroundMessageDeprecated = ReceiveSendPaymentContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveSetTrustlineBackgroundMessage = ReceiveSetTrustlineContentMessage & BackgroundMessagePayload;
export declare type ReceiveSetTrustlineBackgroundMessageDeprecated = ReceiveSetTrustlineContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveGetAddressBackgroundMessage = ReceiveGetAddressContentMessage & BackgroundMessagePayload;
export declare type ReceiveGetAddressBackgroundMessageDeprecated = ReceiveGetAddressContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveGetNetworkBackgroundMessage = ReceiveGetNetworkContentMessage & BackgroundMessagePayload;
export declare type ReceiveGetNetworkBackgroundMessageDeprecated = ReceiveGetNetworkContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveGetNFTBackgroundMessage = ReceiveGetNFTContentMessage & BackgroundMessagePayload;
export declare type ReceiveGetNFTBackgroundMessageDeprecated = ReceiveGetNFTContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceivePublicKeyBackgroundMessage = ReceiveGetPublicKeyContentMessage & BackgroundMessagePayload;
export declare type ReceivePublicKeyBackgroundMessageDeprecated = ReceiveGetPublicKeyContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveSignMessageBackgroundMessage = ReceiveSignMessageContentMessage & BackgroundMessagePayload;
export declare type ReceiveSignMessageBackgroundMessageDeprecated = ReceiveSignMessageContentMessageDeprecated & BackgroundMessagePayload;
export declare type ReceiveMintNFTBackgroundMessage = ReceiveMintNFTContentMessage & BackgroundMessagePayload;
export declare type ReceiveCreateNFTOfferBackgroundMessage = ReceiveCreateNFTOfferContentMessage & BackgroundMessagePayload;
export declare type ReceiveCancelNFTOfferBackgroundMessage = ReceiveCancelNFTOfferContentMessage & BackgroundMessagePayload;
export declare type ReceiveAcceptNFTOfferBackgroundMessage = ReceiveAcceptNFTOfferContentMessage & BackgroundMessagePayload;
export declare type ReceiveBurnNFTBackgroundMessage = ReceiveBurnNFTContentMessage & BackgroundMessagePayload;
export declare type ReceiveSetAccountBackgroundMessage = ReceiveSetAccountContentMessage & BackgroundMessagePayload;
export declare type ReceiveCreateOfferBackgroundMessage = ReceiveCreateOfferContentMessage & BackgroundMessagePayload;
export declare type ReceiveCancelOfferBackgroundMessage = ReceiveCancelOfferContentMessage & BackgroundMessagePayload;
export declare type ReceiveSubmitTransactionBackgroundMessage = ReceiveSubmitTransactionContentMessage & BackgroundMessagePayload;
export declare type InternalReceivePasswordBackgroundMessage = InternalReceivePasswordContentMessage & BackgroundMessagePayload;
export declare type InternalReceiveSignedOutBackgroundMessage = InternalReceiveSignOutContentMessage & BackgroundMessagePayload;
export declare type EventNetworkChangedBackgroundMessage = EventNetworkChangedContentMessage & BackgroundMessagePayload;
export declare type EventWalletChangedBackgroundMessage = EventWalletChangedContentMessage & BackgroundMessagePayload;
export declare type EventLoginBackgroundMessage = EventLoginContentMessage & BackgroundMessagePayload;
export declare type EventLogoutBackgroundMessage = EventLogoutContentMessage & BackgroundMessagePayload;
export declare type BackgroundMessage = RequestAcceptNFTOfferMessage | RequestBurnNFTMessage | RequestCancelNFTOfferMessage | RequestCancelOfferMessage | RequestCreateNFTOfferMessage | RequestCreateOfferMessage | RequestGetAddressMessage | RequestGetAddressMessageDeprecated | RequestGetNetworkMessage | RequestGetNetworkMessageDeprecated | RequestGetNFTMessage | RequestGetNFTMessageDeprecated | RequestGetPublicKeyMessage | RequestGetPublicKeyMessageDeprecated | RequestMintNFTMessage | RequestSendPaymentMessage | RequestSendPaymentMessageDeprecated | RequestSetAccountMessage | RequestSetTrustlineMessage | RequestSetTrustlineMessageDeprecated | RequestSignMessageMessage | RequestSignMessageMessageDeprecated | RequestSubmitTransactionMessage | EventLoginBackgroundMessage | EventLogoutBackgroundMessage | EventNetworkChangedBackgroundMessage | EventWalletChangedBackgroundMessage | ReceiveAcceptNFTOfferBackgroundMessage | ReceiveBurnNFTBackgroundMessage | ReceiveCancelNFTOfferBackgroundMessage | ReceiveCancelOfferBackgroundMessage | ReceiveCreateNFTOfferBackgroundMessage | ReceiveCreateOfferBackgroundMessage | ReceiveGetAddressBackgroundMessage | ReceiveGetAddressBackgroundMessageDeprecated | ReceiveGetNetworkBackgroundMessage | ReceiveGetNetworkBackgroundMessageDeprecated | ReceiveGetNFTBackgroundMessage | ReceiveGetNFTBackgroundMessageDeprecated | ReceiveMintNFTBackgroundMessage | ReceivePublicKeyBackgroundMessage | ReceivePublicKeyBackgroundMessageDeprecated | ReceiveSetAccountBackgroundMessage | ReceiveSendPaymentBackgroundMessage | ReceiveSendPaymentBackgroundMessageDeprecated | ReceiveSetTrustlineBackgroundMessage | ReceiveSetTrustlineBackgroundMessageDeprecated | ReceiveSignMessageBackgroundMessage | ReceiveSignMessageBackgroundMessageDeprecated | ReceiveSubmitTransactionBackgroundMessage | InternalRequestPasswordMessage | InternalReceivePasswordBackgroundMessage | InternalReceiveSignedOutBackgroundMessage;
export interface RequestIsInstalledMessage {
    app: typeof GEM_WALLET;
    type: 'REQUEST_IS_INSTALLED/V3';
}
export declare type APIMessages = RequestAcceptNFTOfferMessage | RequestBurnNFTMessage | RequestCancelNFTOfferMessage | RequestCancelOfferMessage | RequestCreateNFTOfferMessage | RequestCreateOfferMessage | RequestGetAddressMessage | RequestGetNetworkMessage | RequestGetNFTMessage | RequestGetPublicKeyMessage | RequestMintNFTMessage | RequestIsInstalledMessage | RequestSendPaymentMessage | RequestSetAccountMessage | RequestSetTrustlineMessage | RequestSignMessageMessage | RequestSubmitTransactionMessage;
export {};
