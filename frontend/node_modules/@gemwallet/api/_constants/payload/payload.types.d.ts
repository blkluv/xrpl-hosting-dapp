import { AccountSetAsfFlags, Transaction } from 'xrpl';
import { Amount, IssuedCurrencyAmount } from 'xrpl/dist/npm/models/common';
import { Network } from '../network/network.constant';
import { Memo, MintNFTFlags, PaymentFlags, Signer, TrustSetFlags, CreateNFTOfferFlags, SetAccountFlags, CreateOfferFlags } from '../xrpl/basic.types';
import { AccountNFToken } from './../xrpl/nft.types';
export interface GetNetworkRequest {
    id: number | undefined;
}
export interface WebsiteRequest {
    url: string;
    title: string;
    favicon: string | null | undefined;
}
export interface BaseTransactionRequest {
    fee?: string;
    sequence?: number;
    accountTxnID?: string;
    lastLedgerSequence?: number;
    memos?: Memo[];
    signers?: Signer[];
    sourceTag?: number;
    signingPubKey?: string;
    ticketSequence?: number;
    txnSignature?: string;
}
export interface SendPaymentRequest extends BaseTransactionRequest {
    amount: Amount;
    destination: string;
    destinationTag?: number;
    flags?: PaymentFlags;
}
export interface SendPaymentRequestDeprecated {
    amount: string;
    currency?: string;
    issuer?: string;
    memo?: string;
    destinationTag?: string;
}
export interface SetTrustlineRequest extends BaseTransactionRequest {
    limitAmount: IssuedCurrencyAmount;
    flags?: TrustSetFlags;
}
export interface SetTrustlineRequestDeprecated {
    currency: string;
    issuer: string;
    fee?: string;
    value: string;
}
export interface MintNFTRequest extends BaseTransactionRequest {
    flags?: MintNFTFlags;
    issuer?: string;
    NFTokenTaxon: number;
    transferFee?: number;
    URI?: string;
}
export interface CreateNFTOfferRequest extends BaseTransactionRequest {
    NFTokenID: string;
    amount: Amount;
    owner?: string;
    expiration?: number;
    destination?: string;
    flags?: CreateNFTOfferFlags;
}
export interface CancelNFTOfferRequest extends BaseTransactionRequest {
    NFTokenOffers: string[];
}
export interface AcceptNFTOfferRequest extends BaseTransactionRequest {
    NFTokenSellOffer?: string;
    NFTokenBuyOffer?: string;
    NFTokenBrokerFee?: Amount;
}
export interface BurnNFTRequest extends BaseTransactionRequest {
    NFTokenID: string;
    owner?: string;
}
export interface GetNFTRequest {
    limit?: number;
    marker?: unknown;
}
export interface SignMessageRequest {
    url: string;
    title: string;
    favicon: string | null | undefined;
    message: string;
}
export interface SetAccountRequest extends BaseTransactionRequest {
    flags?: SetAccountFlags;
    clearFlag?: number;
    domain?: string;
    emailHash?: string;
    messageKey?: string;
    NFTokenMinter?: string;
    setFlag?: AccountSetAsfFlags;
    transferRate?: number;
    tickSize?: number;
}
export interface CreateOfferRequest extends BaseTransactionRequest {
    flags?: CreateOfferFlags;
    expiration?: number;
    offerSequence?: number;
    takerGets: Amount;
    takerPays: Amount;
}
export interface CancelOfferRequest extends BaseTransactionRequest {
    offerSequence: number;
}
export interface SubmitTransactionRequest {
    transaction: Transaction;
}
export declare type RequestPayload = AcceptNFTOfferRequest | BurnNFTRequest | CancelNFTOfferRequest | CancelOfferRequest | CreateNFTOfferRequest | CreateOfferRequest | GetNetworkRequest | GetNFTRequest | MintNFTRequest | WebsiteRequest | SendPaymentRequest | SendPaymentRequestDeprecated | SetAccountRequest | SetTrustlineRequest | SetTrustlineRequestDeprecated | SignMessageRequest | SubmitTransactionRequest;
export declare const enum ResponseType {
    Response = "response",
    Reject = "reject"
}
interface BaseResponse<T> {
    type: ResponseType;
    result?: T;
}
export interface GetNetworkResponse extends BaseResponse<{
    network: Network;
    websocket: string;
}> {
}
export interface GetNetworkResponseDeprecated {
    network: Network | undefined;
}
export interface GetAddressResponse extends BaseResponse<{
    address: string;
}> {
}
export interface GetAddressResponseDeprecated {
    publicAddress: string | null | undefined;
}
export interface GetPublicKeyResponse extends BaseResponse<{
    address: string;
    publicKey: string;
}> {
}
export interface GetPublicKeyResponseDeprecated {
    address: string | null | undefined;
    publicKey: string | null | undefined;
}
export interface SignMessageResponse extends BaseResponse<{
    signedMessage: string;
}> {
}
export interface SignMessageResponseDeprecated {
    signedMessage: string | null | undefined;
}
export interface SubmitTransactionResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface IsInstalledResponse {
    result: {
        isInstalled: boolean;
    };
}
export interface SendPaymentResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface SendPaymentResponseDeprecated {
    hash: string | null | undefined;
}
export interface SetTrustlineResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface SetTrustlineResponseDeprecated {
    hash: string | null | undefined;
}
export interface GetNFTResponse extends BaseResponse<{
    account_nfts: AccountNFToken[];
    marker?: unknown;
}> {
}
export interface GetNFTResponseDeprecated {
    nfts: AccountNFToken[] | null | undefined;
}
export interface MintNFTResponse extends BaseResponse<{
    NFTokenID: string;
    hash: string;
}> {
}
export interface CreateNFTOfferResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface CancelNFTOfferResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface AcceptNFTOfferResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface BurnNFTResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface SetAccountResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface CreateOfferResponse extends BaseResponse<{
    hash: string;
}> {
}
export interface CancelOfferResponse extends BaseResponse<{
    hash: string;
}> {
}
export declare type ResponsePayload = AcceptNFTOfferResponse | BurnNFTResponse | CancelNFTOfferResponse | CancelOfferResponse | CreateNFTOfferResponse | CreateOfferResponse | GetAddressResponse | GetAddressResponseDeprecated | GetNFTResponse | GetNFTResponseDeprecated | GetNetworkResponse | GetNetworkResponseDeprecated | GetPublicKeyResponse | GetPublicKeyResponseDeprecated | IsInstalledResponse | MintNFTResponse | SendPaymentResponse | SendPaymentResponseDeprecated | SetAccountResponse | SetTrustlineResponse | SetTrustlineResponseDeprecated | SignMessageResponse | SignMessageResponseDeprecated | SubmitTransactionResponse;
export interface PasswordInternalResponse {
    password: string;
}
interface BaseEventResponse<T> {
    result: T;
}
export interface EventNetworkChangedResponse extends BaseEventResponse<{
    network: {
        name: string;
        server: string;
        description: string;
    };
}> {
}
export interface EventWalletChangedResponse extends BaseEventResponse<{
    wallet: {
        publicAddress: string;
    };
}> {
}
export interface EventLoginResponse extends BaseEventResponse<{
    loggedIn: boolean;
}> {
}
export interface EventLogoutResponse extends BaseEventResponse<{
    loggedIn: boolean;
}> {
}
export {};
